#include "apue.h"
static void sig_int(int);

int main(void)
{
    sigset_t newmask,oldmask,waitmask;

    pr_mask("program start:");
    if(signal (SIGINT,sig_int) == SIG_ERR)
        err_sys("signal(SIGINT) error");
    sigemptyset(&waitmask);
    sigaddset(&waitmask,SIGUSR1);
    sigemptyset(&newmask);
    sigaddset(&newmask,SIGINT);

    /*
        Block SIGINT and save current signal mask.
        *
    */

    if(sigprocmask(SIG_BLOCK,&newmask,&oldmask) < 0)
        err_sys("SIG_BLOCK error");

    /*
       critical region of code.
       */
    pr_mask("in critical region:");

    /*
       Pause, allowing all signals except SIGUSR1
    */
    if(sigsuspend(&waitmask) != -1)
        err_sys("sigsupsend error");
